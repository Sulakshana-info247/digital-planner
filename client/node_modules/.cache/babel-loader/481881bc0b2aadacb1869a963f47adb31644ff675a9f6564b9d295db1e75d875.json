{"ast":null,"code":"var _jsxFileName = \"D:\\\\sulakshana_workspace\\\\react_apps\\\\digital-planner\\\\client\\\\src\\\\components\\\\Goals.js\",\n  _s = $RefreshSig$();\n// client/src/components/Goals.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Goals = () => {\n  _s();\n  const [newGoal, setNewGoal] = useState('');\n  const [goals, setGoals] = useState([]);\n  useEffect(() => {\n    // Fetch goals from the backend when the component mounts\n    fetchGoals();\n  }, []); // Empty dependency array ensures this effect runs only once\n\n  const fetchGoals = async () => {\n    try {\n      const response = await fetch('/api/goals');\n      if (response.ok) {\n        const data = await response.json();\n        setGoals(data);\n      } else {\n        console.error('Failed to fetch goals');\n      }\n    } catch (error) {\n      console.error('Error fetching goals:', error);\n    }\n  };\n  const handleAddGoal = async () => {\n    try {\n      // Make a POST request to add a new goal\n      const response = await fetch('/api/goals', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: newGoal\n        })\n      });\n      if (response.ok) {\n        console.log('Goal added successfully');\n        // Fetch goals again after adding a new goal\n        fetchGoals();\n        // Optionally, you can reset the form or update the UI as needed\n        setNewGoal('');\n      } else {\n        console.error('Failed to add goal');\n      }\n    } catch (error) {\n      console.error('Error adding goal:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Goals\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Goals Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your goal\",\n        value: newGoal,\n        onChange: e => setNewGoal(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddGoal,\n        children: \"Add Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: goals.map(goal => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: goal.text\n      }, goal._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Goals, \"OkuZKry+c20cy7MACNsFWgqjqsY=\");\n_c = Goals;\nexport default Goals;\nvar _c;\n$RefreshReg$(_c, \"Goals\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Goals","_s","newGoal","setNewGoal","goals","setGoals","fetchGoals","response","fetch","ok","data","json","console","error","handleAddGoal","method","headers","body","JSON","stringify","text","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","goal","_id","_c","$RefreshReg$"],"sources":["D:/sulakshana_workspace/react_apps/digital-planner/client/src/components/Goals.js"],"sourcesContent":["// client/src/components/Goals.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Goals = () => {\r\n  const [newGoal, setNewGoal] = useState('');\r\n  const [goals, setGoals] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch goals from the backend when the component mounts\r\n    fetchGoals();\r\n  }, []); // Empty dependency array ensures this effect runs only once\r\n\r\n  const fetchGoals = async () => {\r\n    try {\r\n      const response = await fetch('/api/goals');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setGoals(data);\r\n      } else {\r\n        console.error('Failed to fetch goals');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching goals:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddGoal = async () => {\r\n    try {\r\n      // Make a POST request to add a new goal\r\n      const response = await fetch('/api/goals', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ text: newGoal }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Goal added successfully');\r\n        // Fetch goals again after adding a new goal\r\n        fetchGoals();\r\n        // Optionally, you can reset the form or update the UI as needed\r\n        setNewGoal('');\r\n      } else {\r\n        console.error('Failed to add goal');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding goal:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='Goals'>\r\n      <h2>Goals Page</h2>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter your goal\"\r\n          value={newGoal}\r\n          onChange={(e) => setNewGoal(e.target.value)}\r\n        />\r\n        <button onClick={handleAddGoal}>Add Goal</button>\r\n      </div>\r\n      <ul>\r\n        {goals.map((goal) => (\r\n          <li key={goal._id}>{goal.text}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Goals;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}