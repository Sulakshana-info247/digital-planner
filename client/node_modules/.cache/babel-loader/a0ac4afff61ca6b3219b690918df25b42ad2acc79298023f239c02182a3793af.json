{"ast":null,"code":"var _jsxFileName = \"D:\\\\sulakshana_workspace\\\\react_apps\\\\digital-planner\\\\client\\\\src\\\\components\\\\Journal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Journal = () => {\n  _s();\n  const [journalEntry, setJournalEntry] = useState('');\n  const handleJournalChange = e => {\n    setJournalEntry(e.target.value);\n  };\n  const saveJournalEntry = () => {\n    // Implement logic to save journal entry to the backend (MongoDB)\n    // You can use axios or fetch to make an HTTP request\n    console.log('Saving Journal Entry:', journalEntry);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Journal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"10\",\n      cols: \"50\",\n      value: journalEntry,\n      onChange: handleJournalChange,\n      placeholder: \"Write your journal entry here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveJournalEntry,\n      children: \"Save Entry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Journal, \"uQJt1juZSn8SGeFpx5US3gGQrRk=\");\n_c = Journal;\nexport default Journal;\nvar _c;\n$RefreshReg$(_c, \"Journal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Journal","_s","journalEntry","setJournalEntry","handleJournalChange","e","target","value","saveJournalEntry","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","cols","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/sulakshana_workspace/react_apps/digital-planner/client/src/components/Journal.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Journal = () => {\r\n  const [journalEntry, setJournalEntry] = useState('');\r\n\r\n  const handleJournalChange = (e) => {\r\n    setJournalEntry(e.target.value);\r\n  };\r\n\r\n  const saveJournalEntry = () => {\r\n    // Implement logic to save journal entry to the backend (MongoDB)\r\n    // You can use axios or fetch to make an HTTP request\r\n    console.log('Saving Journal Entry:', journalEntry);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Journal</h2>\r\n      <textarea\r\n        rows=\"10\"\r\n        cols=\"50\"\r\n        value={journalEntry}\r\n        onChange={handleJournalChange}\r\n        placeholder=\"Write your journal entry here...\"\r\n      ></textarea>\r\n      <br />\r\n      <button onClick={saveJournalEntry}>Save Entry</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Journal;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMO,mBAAmB,GAAIC,CAAC,IAAK;IACjCF,eAAe,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAER,YAAY,CAAC;EACpD,CAAC;EAED,oBACEH,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBhB,OAAA;MACEiB,IAAI,EAAC,IAAI;MACTC,IAAI,EAAC,IAAI;MACTV,KAAK,EAAEL,YAAa;MACpBgB,QAAQ,EAAEd,mBAAoB;MAC9Be,WAAW,EAAC;IAAkC;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACZhB,OAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNhB,OAAA;MAAQqB,OAAO,EAAEZ,gBAAiB;MAAAG,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV,CAAC;AAACd,EAAA,CA3BID,OAAO;AAAAqB,EAAA,GAAPrB,OAAO;AA6Bb,eAAeA,OAAO;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}