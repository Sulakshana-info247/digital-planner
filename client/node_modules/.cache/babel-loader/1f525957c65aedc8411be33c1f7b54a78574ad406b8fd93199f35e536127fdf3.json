{"ast":null,"code":"var _jsxFileName = \"D:\\\\sulakshana_workspace\\\\react_apps\\\\digital-planner\\\\client\\\\src\\\\components\\\\EditGoal.js\",\n  _s = $RefreshSig$();\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditGoal = () => {\n  _s();\n  let {\n    state: {\n      goal\n    }\n  } = useLocation();\n  console.log(goal);\n  const id = goal._id;\n  const [newGoal, setNewGoal] = useState(goal.text);\n  const [targetDate, setTargetDate] = useState(goal.targetDate.toISOString().substr(0, 10));\n  const navigate = useNavigate();\n  const URL = 'http://localhost:3001';\n  const handleUpdateGoal = async () => {\n    try {\n      // Make a POST request to add a new goal\n      const updateURL = `${URL}/api/goals/${id}`;\n      console.log(updateURL);\n      const response = await fetch(updateURL, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: newGoal,\n          targetDate: targetDate\n        })\n      });\n      if (response.ok) {\n        console.log('Goal Updated successfully');\n        navigate('/goals');\n      } else {\n        console.error('Failed to update goal');\n      }\n    } catch (error) {\n      console.error('Error adding goal:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => e.preventDefault(),\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" Edit your Goal \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your goal\",\n      value: newGoal,\n      onChange: e => setNewGoal(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" Edit your Goal \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: targetDate,\n      onChange: e => setTargetDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdateGoal,\n      children: \"Update Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }, this);\n};\n_s(EditGoal, \"w04Xi6lWCzvaoImwd74x3sOZBcQ=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = EditGoal;\nexport default EditGoal;\nvar _c;\n$RefreshReg$(_c, \"EditGoal\");","map":{"version":3,"names":["useLocation","useNavigate","useState","jsxDEV","_jsxDEV","EditGoal","_s","state","goal","console","log","id","_id","newGoal","setNewGoal","text","targetDate","setTargetDate","toISOString","substr","navigate","URL","handleUpdateGoal","updateURL","response","fetch","method","headers","body","JSON","stringify","ok","error","onSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["D:/sulakshana_workspace/react_apps/digital-planner/client/src/components/EditGoal.js"],"sourcesContent":["import {useLocation, useNavigate} from 'react-router-dom'\r\nimport { useState } from 'react';\r\n\r\nconst EditGoal = () => {\r\n    \r\n        let  {state:{goal}} = useLocation();\r\n        console.log(goal);\r\n        const id= goal._id;\r\n        const [newGoal,setNewGoal] = useState(goal.text);\r\n        const [targetDate, setTargetDate] = useState(goal.targetDate.toISOString().substr(0, 10));\r\n        const navigate = useNavigate()\r\n        const URL = 'http://localhost:3001';\r\n        \r\n\r\n    const handleUpdateGoal = async () => {\r\n    \r\n        \r\n        try {\r\n          // Make a POST request to add a new goal\r\n            const updateURL=`${URL}/api/goals/${id}`\r\n            console.log(updateURL)\r\n            const response = await fetch(updateURL, {\r\n            method: 'PATCH',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ text: newGoal , targetDate: targetDate }),\r\n          });\r\n    \r\n          if (response.ok) {\r\n            console.log('Goal Updated successfully');\r\n            navigate('/goals')\r\n          } else {\r\n            console.error('Failed to update goal');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error adding goal:', error);\r\n        }\r\n      };\r\n\r\n    return (\r\n          \r\n            <form onSubmit={e=>e.preventDefault()}>\r\n           <label> Edit your Goal </label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your goal\"\r\n              value={newGoal}\r\n              onChange={(e) => setNewGoal(e.target.value)}\r\n            />\r\n            <label> Edit your Goal </label>\r\n             <input\r\n              type=\"date\"\r\n              value={targetDate}\r\n              onChange={(e) => setTargetDate(e.target.value)}\r\n            />\r\n            <button onClick={handleUpdateGoal}>Update Goal</button>\r\n          </form>\r\n        )\r\n        } \r\n      \r\n    \r\n  \r\nexport default EditGoal"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}