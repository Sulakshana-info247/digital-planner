{"ast":null,"code":"var _jsxFileName = \"D:\\\\sulakshana_workspace\\\\react_apps\\\\digital-planner\\\\client\\\\src\\\\components\\\\Goals.js\",\n  _s = $RefreshSig$();\n// client/src/components/Goals.js\nimport React, { useState, useEffect } from 'react';\nimport Goal from './Goal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Goals = () => {\n  _s();\n  const [newGoal, setNewGoal] = useState('');\n  const [targetDate, setTargetDate] = useState('');\n  const [goals, setGoals] = useState([]);\n  const URL = 'http://localhost:3001';\n  useEffect(() => {\n    // Fetch goals from the backend when the component mounts\n    fetchGoals();\n  }, []); // Empty dependency array ensures this effect runs only once\n\n  const fetchGoals = async () => {\n    try {\n      const response = await fetch(`${URL}/api/goals`);\n      if (response.ok) {\n        const data = await response.json();\n        setGoals(data);\n      } else {\n        console.error('Failed to fetch goals');\n      }\n    } catch (error) {\n      console.error('Error fetching goals:', error);\n    }\n  };\n  const handleAddGoal = async () => {\n    try {\n      console.log(targetDate);\n      // Make a POST request to add a new goal\n      const response = await fetch(`${URL}/api/goals`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: newGoal,\n          targetDate: targetDate\n        })\n      });\n      if (response.ok) {\n        console.log('Goal added successfully');\n        // Fetch goals again after adding a new goal\n        fetchGoals();\n        // Optionally, you can reset the form or update the UI as needed\n        setNewGoal('');\n        setTargetDate('');\n      } else {\n        console.error('Failed to add goal');\n      }\n    } catch (error) {\n      console.error('Error adding goal:', error);\n    }\n  };\n  const tableContent = goals !== null && goals !== void 0 && goals.length ? goals.map(goal => /*#__PURE__*/_jsxDEV(Goal, {\n    goal: goal\n  }, goal === null || goal === void 0 ? void 0 : goal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 30\n  }, this)) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Goals\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Set your Goals and time to track your progress \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your goal\",\n        value: newGoal,\n        onChange: e => setNewGoal(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: targetDate,\n        onChange: e => setTargetDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddGoal,\n        children: \"Add Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"goalsTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Target\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              width: '20%'\n            },\n            children: \" Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Goals, \"JRUQklTCopNiOgMbmIGYwfTAeTs=\");\n_c = Goals;\nexport default Goals;\nvar _c;\n$RefreshReg$(_c, \"Goals\");","map":{"version":3,"names":["React","useState","useEffect","Goal","jsxDEV","_jsxDEV","Goals","_s","newGoal","setNewGoal","targetDate","setTargetDate","goals","setGoals","URL","fetchGoals","response","fetch","ok","data","json","console","error","handleAddGoal","log","method","headers","body","JSON","stringify","text","tableContent","length","map","goal","id","fileName","_jsxFileName","lineNumber","columnNumber","className","children","type","placeholder","value","onChange","e","target","onClick","style","width","_c","$RefreshReg$"],"sources":["D:/sulakshana_workspace/react_apps/digital-planner/client/src/components/Goals.js"],"sourcesContent":["// client/src/components/Goals.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport Goal from './Goal';\r\n\r\nconst Goals = () => {\r\n  const [newGoal, setNewGoal] = useState('');\r\n  const [targetDate, setTargetDate] = useState('');\r\n  const [goals, setGoals] = useState([]);\r\n  const URL = 'http://localhost:3001';\r\n\r\n  useEffect(() => {\r\n    // Fetch goals from the backend when the component mounts\r\n    fetchGoals();\r\n  }, []); // Empty dependency array ensures this effect runs only once\r\n\r\n  \r\n  const fetchGoals = async () => {\r\n    try {\r\n      const response = await fetch(`${URL}/api/goals`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setGoals(data);\r\n      } else {\r\n        console.error('Failed to fetch goals');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching goals:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddGoal = async () => {\r\n    try {\r\n      console.log(targetDate)\r\n      // Make a POST request to add a new goal\r\n      const response = await fetch(`${URL}/api/goals`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ text: newGoal , targetDate: targetDate }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Goal added successfully');\r\n        // Fetch goals again after adding a new goal\r\n        fetchGoals();\r\n        // Optionally, you can reset the form or update the UI as needed\r\n        setNewGoal('');\r\n        setTargetDate('');\r\n      } else {\r\n        console.error('Failed to add goal');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding goal:', error);\r\n    }\r\n  };\r\n\r\n  const tableContent = goals?.length\r\n        ? goals.map (goal => <Goal goal={goal}  key={goal?.id}/>)\r\n        : null\r\n\r\n  return (\r\n    <div className='Goals'>\r\n      <h2>Set your Goals and time to track your progress </h2>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter your goal\"\r\n          value={newGoal}\r\n          onChange={(e) => setNewGoal(e.target.value)}\r\n        />\r\n         <input\r\n          type=\"date\"\r\n          value={targetDate}\r\n          onChange={(e) => setTargetDate(e.target.value)}\r\n        />\r\n        <button onClick={handleAddGoal}>Add Goal</button>\r\n      </div>\r\n      <table className='goalsTable'>\r\n        <thead>\r\n          <tr>\r\n            <th>Goal</th>\r\n            <th>Target</th>\r\n            <th style={{width:'20%'}}> Edit</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n      {tableContent}\r\n       \r\n       </tbody>\r\n    </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Goals;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}